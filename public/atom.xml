<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>倚楼听风雨</title>
  <icon>https://www.gravatar.com/avatar/9a99b879415b5dcf80f23227e8c2f53b</icon>
  <subtitle>淡看江湖路</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="/"/>
  <updated>2017-12-16T08:10:20.667Z</updated>
  <id>/</id>
  
  <author>
    <name>xbynet</name>
    <email>xbynet@outlook.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>&#39;hello&#39;</title>
    <link href="/2017/12/16/hello/"/>
    <id>/2017/12/16/hello/</id>
    <published>2017-12-15T19:55:53.000Z</published>
    <updated>2017-12-16T08:10:20.667Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://sfault-avatar.b0.upaiyun.com/206/579/2065794108-5721d3ee75b36_huge256" alt=""></p><h1 id="nginx-https配置"><a href="#nginx-https配置" class="headerlink" title="nginx+https配置"></a>nginx+https配置</h1><p><a href="https://www.digitalocean.com/community/tutorials/how-to-create-an-ssl-certificate-on-nginx-for-ubuntu-14-04" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/how-to-create-an-ssl-certificate-on-nginx-for-ubuntu-14-04</a><br>TLS或传输层安全( transport layer security)，它的前身是SSL(安全套接字层secure sockets layer)，是Web协议用来包裹在一个受保护，加密封装正常通道。<br>采用这种技术，服务器和客户端之间可以安全地进行交互，而不用担心消息将被拦截和读取。证书系统帮助用户在核实它们与连接站点的身份。</p><a id="more"></a><p><strong>步骤1：Create the SSL Certificate</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo mkdir /etc/nginx/ssl</span><br><span class="line">sudo openssl req -x509 -nodes -days 36500 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt</span><br></pre></td></tr></table></figure></p><p>创建了有效期100年，加密强度为RSA2048的SSL密钥key和X509证书文件。<br>参数说明:</p><ul><li>req: 配置参数-x509指定使用 X.509证书签名请求管理(certificate signing request (CSR)). “X.509” 是一个公钥代表that SSL and TLS adheres to for its key and certificate management.</li><li>-nodes: 告诉OpenSSL生产证书时忽略密码环节.(因为我们需要Nginx自动读取这个文件，而不是以用户交互的形式)。</li><li>-days 36500: 证书有效期，100年</li><li>-newkey rsa:2048: 同时产生一个新证书和一个新的SSL key(加密强度为RSA 2048)</li><li>-keyout:SSL输出文件名</li><li>-out:证书生成文件名<br>它会问一些问题。需要注意的是在common name中填入网站域名，如wiki.xby1993.net即可生成该站点的证书，同时也可以使用泛域名如*.xby1993.net来生成所有二级域名可用的网站证书。<br>整个问题应该如下所示:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Country Name (2 letter code) [AU]:US</span><br><span class="line">State or Province Name (full name) [Some-State]:New York</span><br><span class="line">Locality Name (eg, city) []:New York City</span><br><span class="line">Organization Name (eg, company) [Internet Widgits Pty Ltd]:Bouncy Castles, Inc.</span><br><span class="line">Organizational Unit Name (eg, section) []:Ministry of Water Slides</span><br><span class="line">Common Name (e.g. server FQDN or YOUR name) []:your_domain.com</span><br><span class="line">Email Address []:admin@your_domain.com</span><br></pre></td></tr></table></figure></li></ul><p><strong>步骤2： Configure Nginx to Use SSL</strong><br><a href="http://nginx.org/en/docs/http/configuring_https_servers.html" target="_blank" rel="noopener">http://nginx.org/en/docs/http/configuring_https_servers.html</a><br><a href="http://manual.seafile.com/deploy/https_with_nginx.html" target="_blank" rel="noopener">http://manual.seafile.com/deploy/https_with_nginx.html</a><br><a href="https://s.how/nginx-ssl/" target="_blank" rel="noopener">https://s.how/nginx-ssl/</a><br>首先配置HTTP请求重定向<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  www.yourdomain.com;</span><br><span class="line">        rewrite ^ https://$http_host$request_uri? permanent;    # force redirect http to https</span><br><span class="line">#return 301 https://$http_host$request_uri;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        listen 443 ssl;</span><br><span class="line"></span><br><span class="line">        ssl_certificate /etc/nginx/ssl/nginx.crt;</span><br><span class="line">        ssl_certificate_key /etc/nginx/ssl/nginx.key;</span><br><span class="line">keepalive_timeout   70;</span><br><span class="line">        server_name www.yourdomain.com;</span><br><span class="line">#禁止在header中出现服务器版本，防止黑客利用版本漏洞攻击</span><br><span class="line">server_tokens off;</span><br><span class="line">#如果是全站 HTTPS 并且不考虑 HTTP 的话，可以加入 HSTS 告诉你的浏览器本网站全站加密，并且强制用 HTTPS 访问</span><br><span class="line">#add_header Strict-Transport-Security &quot;max-age=31536000; includeSubdomains&quot;;</span><br><span class="line">        # ......</span><br><span class="line">        fastcgi_param   HTTPS               on;</span><br><span class="line">        fastcgi_param   HTTP_SCHEME         https;</span><br><span class="line"></span><br><span class="line">access_log      /var/log/nginx/wiki.xby1993.net.access.log;</span><br><span class="line">        error_log       /var/log/nginx/wiki.xby1993.net.error.log;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>如果想同时启用HTTP和HTTPS<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen              80;</span><br><span class="line">    listen              443 ssl;</span><br><span class="line">    server_name         www.example.com;</span><br><span class="line">    ssl_certificate     www.example.com.crt;</span><br><span class="line">    ssl_certificate_key www.example.com.key;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>步骤3：重启nginx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">sudo service nginx restart</span><br></pre></td></tr></table></figure></p><h2 id="附录1、证书格式说明"><a href="#附录1、证书格式说明" class="headerlink" title="附录1、证书格式说明"></a>附录1、证书格式说明</h2><ul><li>.crt：自签名的证书</li><li>.csr：证书的请求(用于向证书颁发机构申请crt证书时使用，nginx配置时不会用到)</li><li>.key：SSL Key (分为不带口令和带口令版本)。<br>我们自签名证书配置nginx需要的是.crt证书，和不带口令的SSL Key的.key文件。</li></ul><h2 id="附录2、可靠的第三方SSL证书颁发机构"><a href="#附录2、可靠的第三方SSL证书颁发机构" class="headerlink" title="附录2、可靠的第三方SSL证书颁发机构"></a>附录2、可靠的第三方SSL证书颁发机构</h2><p>目前一般市面上针对中小站长和企业的 SSL 证书颁发机构有：<br>StartSSL<br>Comodo / 子品牌 Positive SSL<br>GlobalSign / 子品牌 AlphaSSL<br>GeoTrust / 子品牌 RapidSSL</p><p>更多参考资料:<br><a href="http://www.liaoxuefeng.com/article/0014189023237367e8d42829de24b6eaf893ca47df4fb5e000" target="_blank" rel="noopener">http://www.liaoxuefeng.com/article/0014189023237367e8d42829de24b6eaf893ca47df4fb5e000</a><br><a href="https://github.com/michaelliao/itranswarp.js/blob/master/conf/ssl/gencert.sh" target="_blank" rel="noopener">https://github.com/michaelliao/itranswarp.js/blob/master/conf/ssl/gencert.sh</a><br><a href="http://www.21andy.com/new/20100224/1714.html" target="_blank" rel="noopener">http://www.21andy.com/new/20100224/1714.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://sfault-avatar.b0.upaiyun.com/206/579/2065794108-5721d3ee75b36_huge256&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;nginx-https配置&quot;&gt;&lt;a href=&quot;#nginx-https配置&quot; class=&quot;headerlink&quot; title=&quot;nginx+https配置&quot;&gt;&lt;/a&gt;nginx+https配置&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-create-an-ssl-certificate-on-nginx-for-ubuntu-14-04&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.digitalocean.com/community/tutorials/how-to-create-an-ssl-certificate-on-nginx-for-ubuntu-14-04&lt;/a&gt;&lt;br&gt;TLS或传输层安全( transport layer security)，它的前身是SSL(安全套接字层secure sockets layer)，是Web协议用来包裹在一个受保护，加密封装正常通道。&lt;br&gt;采用这种技术，服务器和客户端之间可以安全地进行交互，而不用担心消息将被拦截和读取。证书系统帮助用户在核实它们与连接站点的身份。&lt;/p&gt;
    
    </summary>
    
      <category term="test" scheme="/categories/test/"/>
    
    
      <category term="ginx" scheme="/tags/ginx/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="/2017/12/16/hello-world/"/>
    <id>/2017/12/16/hello-world/</id>
    <published>2017-12-15T18:20:55.009Z</published>
    <updated>2017-12-15T18:20:55.013Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
